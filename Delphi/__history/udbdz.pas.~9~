unit udbdz;

interface

uses
    IniFiles, SysUtils, Forms, FireDAC.Comp.Client, Dialogs;

type

   TConexaoBanco = class
      private
       FConexaoBanco : TSQLConnection;

      public
       constructor Create;
       destructor  Destroy; override;
       function GetConexao : TSQLConnection;
       property ConexaoBanco : TSQLConnection   read GetConexao;
   end;

implementation

// Lê o arquivo INI e carrega os parâmetros no componente TFDConnection
procedure TConexao.Conectar(var Conexao: TFDConnection);
var
    ArqIni : TIniFile;
begin
     ArqIni := TIniFile.Create(ExtractFilePath(Application.ExeName)+'CONF.ini');
     try
        ArqIni.WriteString('Dados', 'UserName', '');
        ArqIni.WriteString('Dados', 'PassWord', '');
        ArqIni.WriteString('Dados', 'Database', '');
        ArqIni.WriteString('Dados', 'Server', '');
        ArqIni.WriteInteger('Dados', 'DriverName', '');
     finally
         ArqIni.Free;
     end;

     try
        //Passa os parâmetros para o objeto Conexão
        Conexao.Connected := false;
        Conexao.LoginPrompt := false;
        Conexao.Params.Clear;
        Conexao.Params.Add('hostname='+ Servidor);
        Conexao.Params.Add('user_name='+ Usuario);
        Conexao.Params.Add('password='+ Senha);
        Conexao.Params.Add('port='+ IntToStr(Porta));
        Conexao.Params.Add('Database='+ Database);
        Conexao.Params.Add('DriverID='+ Driver);
     Except
        on E:Exception do
        ShowMessage('Erro ao carregar parâmetros de conexão!'#13#10 + E.Message);
     end;
end;


end.
